{"pages":[{"title":"About","date":"2017-10-03T00:55:31.329Z","path":"about/index.html","text":""},{"title":"Categories","date":"2017-10-03T00:55:31.329Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2017-10-03T00:55:31.329Z","path":"tags/index.html","text":""}],"posts":[{"title":"","date":"2017-10-03T00:55:31.329Z","path":"wiki/cloud_server/","text":"阿里云本地ssh登录ssh root@XX.XX.XX.XXIP地址用公网的IP。输入密码即可。 续费是个好东西。（凑字数）","tags":[],"categories":[]},{"title":"","date":"2017-10-03T00:55:31.329Z","path":"wiki/git/","text":"用户名初始化git config --global user.email &quot;you@example.com&quot;git config --global user.email &quot;Your name&quot; 为了不总是输入密码用ssh验证。生成密钥。ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;然后都用enter确定即可，也没啥好设置的。 在你的github设定中添加该ssh-key即可。内容在~/.ssh/id_ras.pub publish_key","tags":[],"categories":[]},{"title":"Hello World","date":"2017-10-03T00:55:31.329Z","path":"wiki/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[],"categories":[]},{"title":"","date":"2017-10-03T00:55:31.329Z","path":"wiki/hexo-install/","text":"安装流程必备软件 git sudo apt-get install git node.js sudo apt-get install nodejssudo apt-get install npm 由于我安装“hexo-theme-Wikitten”始终无法运行。问题通过仔细产看某个插件的提示（hexo-generator-json-content）报错，我的nodejs安装版本过低，我之前是根据某个网站，他告诉我下了个安装包，然后解压安装的，才4.4。真是坑，由此也产生了后续“hexo安装”我总得指明是在/usr/local/node/bin/npm。 更新下安装过程。(无需再安装npm）12curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -sudo apt-get install -y nodejs npm简单学习http://www.ydcss.com/archives/18这个不懂，导致我的hexo踩了好多好多坑。 一定要注意他安装的版本号！！！软件、自身都有关。 只介绍安装相关， -g 全局安装–save 安装完了之后，还会写入本地的package.json文件，会自动找位置写，不会覆盖。很重要的工具，我的theme用的是第三方的，需要额外的插件，而travis自动部署时，也是看这个package.json他才知道安装哪些额外的！！ hexo安装因为国内防火墙缘故。npm config set registry https://registry.npm.taobao.org 安装sudo npm install -g hexo-cli 在想要创建blog的位置1234mkdir HEXO &amp; cd HEXOhexo init blog_namecd blog_name 一定是在该文件夹下安装hexo否则该文件夹下的node_modules没有该插件。为了防止“permission denied”。sudo /usr/local/node/bin/npm install hexo --save然后安装hexo的插件，仍然是用sudo，插件包的设置默认在package.json中sudo /usr/local/node/bin/npm install -g 使用hexo -v检查下，发现：我的版本还会报错“ERROR Plugin load failed: hexo-renderer-marked”，手动更新下这个插件。sudo /usr/local/node/bin/npm install hexo-renderer-marked@0.2.3 官方预制版hexo generate也可以用hexo ghexo server也可以用hexo s 然后在local:4000就可以看到博客了。 更新下内容，安装过程为1234mkdir HEXO &amp; cd HEXOhexo init blog_namecd blog_namehexo s 即可。 添加主题“hexo-theme-Wikitten”严格按照作者的文档进行即可。https://github.com/zthxxx/hexo-theme-Wikitten 真的是复杂 部署方案+内容更新https://hexo.io/zh-cn/docs/deployment.html 官方版本的“_config.yml”让githubPage来部署。用travis自动更新。配置内容： 12345# hexo _config.ymldeploy: type: git repository: git@github.com:&lt;user_name&gt;/&lt;user_name&gt;.github.github.io branch: master 安装插件来支持git部署。sudo /usr/local/node/bin/npm install hexo-deployer-git --save 使用hexo deploy或者hexo d来完成部署。 travis自动更新https://blog.zthxxx.me/posts/Build-Hexo-Blog-by-Travis-CI/ zthxxx先生实现的是这么个东西： ​ 在githhub上有个“wiki-site”的reposity，他有两个分支，一个是主分支，就是正常的hexo所在的文件，我们的md文件在这儿编辑；一个是副分支，他是hexo生成的html等静态文件，并让travis把他们部署在这儿，并且设为当前活动分区。(github.io规定了，只有叫master和gh-pages的可以作为他的显示分区，所以。。他的副分区就叫gh-paegs) 然后里面主要是设定3个文件.travis.yml和travis_env_init.sh 和2个_config.yml（一个是在外文件夹，一个是在theme文件夹） 其中只有外文件夹的_config.yml是”副分支“ 因为他才有”deploy“的字眼，其余都是主分支。 travis的自动更新脚本.travis.yml先生写的很好，用的是setting-&gt;Personal access tokens实现的，既方便又不泄漏个人信息。（这个工具厉害，大家还拿他来在github上发布软件–release） 一开始始终不行，我还怀疑是token出问题，之类的，后来验证都没事，就是下面这几个神坑害的。 本地安装travis是 12345678sudo apt-get install ruby`ruby -e 'puts RUBY_VERSION[/\\d+\\.\\d+/]'`-dev # gem命令需要安装rubygem sources #查看原有的官方源gem source -r https://rubygems.org/ # 删除 rubygems 官方源，经常被“墙”gem source -a http://mirrors.aliyun.com/rubygems/ # 添加aliyun 源gem install travis --no-rdoc --no-ri --verbose # 安装Travisgem install travistravis login --github-token 'token' # token即是上面复制的那个token串travis whoami # 提示用户信息 别用别的命令，尤其是ruby，不过本地其实没必要安装，一点用都没有。 踩的几个坑（目前仍未解决，也暂时不需要）： submodules 我们的主题zhxxx-hexo-theme本身也是个github上的repo，如果用git clone来安装，则会在外面commit时不会理会这个主题。本来也没什么问题，而且我觉得也很合理（便于主题能跟着作者一起更新） 问题出现在用travis进行自动部署的时候，他会报错，”git submodule”失败，我实验了好多次都不行，不知道是不是因为我的分支问题，因为我一开始没搞懂作者在干什么。反正最后放弃了，我直接手动复制粘贴的该theme的文件。 他报的是Permission denied (publickey). fatal: Could not read from remote repository.这种错误。也难怪我会多想。 gulp 这个是作者新开发的玩具，然后我就中弹了，他好象是用来压缩静态文件的，没有用到，也一时会解决不了就算了。 travis的yml脚本书写。 其实就是node.js吧，我反正不太懂这个，就是照着填的。云里雾里的。 git的分支问题。目前已大致了解了。git branch XXX是创建分支，git checkout XXX就跳到XXX分支了，在XXX分支使用git merge YYY就把当前的和YYY的合并了，有的还会出现“冲突”提示，并在具体文本中标注。 作者到底有没有和github.io连上线啊，感觉他是在单干。我截止目前为止，还没正式上线，就是跨两个repo的上线。 云端运行hexo server来部署。配置云端的git服务器来更新。以后在想办法。 md编辑器123456789# optional, but recommendedsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE# add Typora's repositorysudo add-apt-repository 'deb https://typora.io ./linux/'sudo apt-get update# install typorasudo apt-get install typora","tags":[],"categories":[]},{"title":"","date":"2017-10-03T00:55:31.329Z","path":"wiki/sublime-use/","text":"install Package Controlshortcut ———-`Ctrl+`` /Sublime Text 2 代码/import urllib2,os,hashlib; h = ‘2915d1851351e5ee549c20394736b442’ + ‘8bc59f460fa1548d1514676163dafc88’; pf = ‘Package Control.sublime-package’; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( ‘http://packagecontrol.io/‘ + pf.replace(‘ ‘, ‘%20’)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), ‘wb’ ).write(by) if dh == h else None; print(‘Error validating download (got %s instead of %s), please try manual install’ % (dh, h) if dh != h else ‘Please restart Sublime Text to finish installation’) /Sublime Text 3 代码/import urllib.request,os,hashlib; h = ‘2915d1851351e5ee549c20394736b442’ + ‘8bc59f460fa1548d1514676163dafc88’; pf = ‘Package Control.sublime-package’; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( ‘http://packagecontrol.io/‘ + pf.replace(‘ ‘, ‘%20’)).read(); dh = hashlib.sha256(by).hexdigest(); print(‘Error validating download (got %s instead of %s), please try manual install’ % (dh, h)) if dh != h else open(os.path.join( ipp, pf), ‘wb’ ).write(by) using Package Control install pluginshortcut ———-Ctrl+shift+P in windows input “PCI”————then you can install anything [any pulgin only need some characters] install process————under the WINDOWS","tags":[],"categories":[]}]}